@page "/Tasks"
@using IoTHomeAssistant.Domain.Services;
@using IoTHomeAssistant.Domain.Dto;
@using IoTHomeAssistant.Domain.Dto.Pagging;


@inject IJobTaskService jobTaskService;

<SfGrid DataSource="@tasks" @ref="grid" AllowPaging="true" AllowSorting="true" Toolbar="Toolbaritems">
    <GridEvents OnToolbarClick="ToolbarClickHandler" TValue="JobTaskItemDto"></GridEvents>
    <GridPageSettings PageSize="10"></GridPageSettings>
    <GridColumns>
        <GridColumn Field=@nameof(JobTaskItemDto.Id) HeaderText="ID" TextAlign="TextAlign.Right" Width="20"></GridColumn>
        <GridColumn Field=@nameof(JobTaskItemDto.Title) HeaderText="Назва" Width="150"></GridColumn>
        <GridColumn Field=@nameof(JobTaskItemDto.Conditions) HeaderText="Налаштування" Width="130"></GridColumn>
        <GridColumn Field=@nameof(JobTaskItemDto.Executions) HeaderText="Виконання" Width="120"></GridColumn>
    </GridColumns>
</SfGrid>

<SfDialog Width="500px" IsModal="true" @bind-Visible="@noItemsModalVisible">
    <DialogTemplates>
        <Content>
            <div class="p-4">
                Жодного елементу не вибрано, виберіть елемент зі списку, щоб мати можливість здійснювати операції над ним.
            </div>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="OK" IsPrimary="true" OnClick="@CloseDialog" />
    </DialogButtons>
</SfDialog>

<EditJobTaskComponent @ref="editModal"></EditJobTaskComponent>

@code{
    SfGrid<JobTaskItemDto> grid;
    EditJobTaskComponent editModal;
    public List<JobTaskItemDto> tasks { get; set; }

    bool noItemsModalVisible = false;

    private List<ItemModel> Toolbaritems;

    protected override void OnInitialized()
    {
        tasks = jobTaskService.GetPaggedList(
            new PageRequest()
            {
                PageNumber = 1,
                PageSize = 10000
            })
            .Result.Items
            .Select(x => new JobTaskItemDto(x))
            .ToList();

        Toolbaritems = new List<ItemModel>() {
            new ItemModel() { Text = "Додати", TooltipText = "Додати", PrefixIcon = "e-add", Id="1" },
            new ItemModel() { Text = "Редагувати", TooltipText = "Редагувати", PrefixIcon = "e-edit", Id = "2" },
            new ItemModel() { Text = "Видалити", TooltipText = "Видалити", PrefixIcon = "e-delete", Id = "3" }
        };
    }

    public async Task ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        var selectedItem = grid.SelectedRecords.FirstOrDefault();
        if (args.Item.Id == "1")
        {
            editModal.AddJobTask();
        }

        if (args.Item.Id == "2")
        {
            if (selectedItem == null)
            {
                noItemsModalVisible = true;
            }
            else
            {
                await editModal.EditJobTaskAsync(selectedItem.Id);
            }
        }

        if (args.Item.Id == "3")
        {
            if (selectedItem == null)
            {
                noItemsModalVisible = true;
            }
        }
    }

    private void CloseDialog()
    {
        noItemsModalVisible = false;
    }
}